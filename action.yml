name: 'Cache nix too'
description: 'Cache artifacts like dependencies and build outputs to improve workflow execution time'
author: 'GitHub'
inputs:
  path:
    description: 'A list of files, directories, and wildcard patterns to cache and restore.'
    required: false
    default: ""
  nix-linux-debug-enabled:
    description: 'An optional boolean for Linux runners. When true, enables debug logs for commands that work with nix store.'
    required: false
    default: "false"
  nix-linux-keep-cache:
    description: 'An optional boolean for Linux runners. When true, keeps restored cache (if any exists) until after this action finishes.'
    required: false
    default: "false"
  nix-linux-cache-working-set:
    description: 'An optional boolean for Linux runners. When true, from nix store, only paths accessed during a job run are cached.'
    required: true
    default: "false"
  nix-macos-debug-enabled:
    description: 'An optional boolean for macOS runners. When true, enables debug logs for commands that work with nix store.'
    required: false
    default: "false"
  nix-macos-keep-cache:
    description: 'An optional boolean for macOS runners. When true, keeps restored cache (if any exists) until after this action finishes.'
    required: true
    default: "false"
  nix-macos-cache-working-set:
    description: 'An optional boolean for macOS runners. When true, from nix store, only paths accessed during a job run are cached.'
    required: true
    default: "false"
  key:
    description: 'An explicit key for restoring and saving the cache.'
    required: true
  restore-keys:
    description: 'An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.'
    required: false
  upload-chunk-size:
    description: 'The chunk size used to split up large files during upload, in bytes'
    required: false
  enableCrossOsArchive:
    description: 'An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms'
    default: 'false'
    required: false
  fail-on-cache-miss:
    description: 'Fail the workflow if cache entry is not found'
    default: 'false'
    required: false
  lookup-only:
    description: 'Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache'
    default: 'false'
    required: false
outputs:
  cache-hit:
    description: 'A boolean value to indicate an exact match was found for the primary key'
runs:
  using: 'node16'
  main: 'dist/restore/index.js'
  post: 'dist/save/index.js'
  post-if: success()
branding:
  icon: 'archive'
  color: 'gray-dark'
